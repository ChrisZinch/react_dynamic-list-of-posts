{"version":3,"sources":["api/posts.js","components/PostsList/PostsList.jsx","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["BASE_URL","getUserPosts","userId","a","fetch","response","json","result","data","filter","post","PostsList","posts","postClose","selectedPostId","postSelection","className","length","map","key","id","title","type","onClick","defaultProps","getPostComments","postId","then","comments","comment","NewCommentForm","onAddComment","useState","name","setName","email","setEmail","body","setBody","onSubmit","event","preventDefault","value","placeholder","onChange","target","trimLeft","required","PostDetails","setComments","showComments","setShowComments","useEffect","handleShowComments","handleCommentDelete","commentId","method","deleteComment","userName","userEmail","content","JSON","stringify","addComment","App","setPosts","selectedUser","setSelectedUser","setSelectedPostId","selectedPost","setSelectedPost","postID","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2314064.chunk.js","sourcesContent":["const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport function getPostDetails(postID) {\n  return fetch(`${BASE_URL}/posts/${+postID}`)\n    .then(response => response.json())\n    .then(result => result.data);\n}\n\nexport const getUserPosts = async(userId) => {\n  const response = await fetch(`${BASE_URL}/posts/`);\n  const result = await response.json();\n\n  return userId\n    ? result.data.filter(post => post.userId === userId)\n    : result.data;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\n\nexport const PostsList = ({\n  posts,\n  postClose,\n  selectedPostId,\n  postSelection,\n}) => (\n  <div className=\"PostsList\">\n    <h2>\n      Posts:\n      {posts.length}\n    </h2>\n\n    <ul className=\"PostsList__list\">\n      {posts.map(post => (\n        <li className=\"PostsList__item\" key={post.id}>\n          <div>\n            <b>\n              [User #\n              {post.userId}\n              ]:\n            </b>\n            {post.title}\n          </div>\n          {post.id !== selectedPostId && (\n            <button\n              type=\"submit\"\n              className=\"PostsList__button button\"\n              onClick={() => {\n                postSelection(post.id);\n              }}\n            >\n              Open\n            </button>\n          )}\n          {post.id === selectedPostId && (\n            <button\n              type=\"submit\"\n              className=\"PostsList__button button\"\n              onClick={postClose}\n            >\n              Close\n            </button>\n          )}\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nPostsList.defaultProps = {\n  posts: [],\n};\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    userId: PropTypes.number.isRequired,\n  })),\n  postClose: PropTypes.func.isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n  postSelection: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport function getPostComments(postId) {\n  return fetch(`${BASE_URL}/comments/`)\n    .then(response => response.json())\n    .then(result => result.data)\n    .then(comments => (\n      comments.filter(comment => comment.postId && comment.postId === postId)\n    ));\n}\n\nexport function addComment(postId, name, email, body) {\n  return fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n  });\n}\n\nexport function deleteComment(commentId) {\n  return fetch(`${BASE_URL}/comments/${commentId}`,\n    { method: 'DELETE' })\n    .then(response => response.json())\n    .then(result => result.data);\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ id, onAddComment }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleSubmit = () => {\n    onAddComment(id, name, email, body);\n\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        handleSubmit();\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          onChange={event => setName(event.target.value.trimLeft())}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"email\"\n          value={email}\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          onChange={event => setEmail(event.target.value.trimLeft())}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          value={body}\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          onChange={event => setBody(event.target.value.trimLeft())}\n          required\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  id: PropTypes.number.isRequired,\n  onAddComment: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { addComment, deleteComment, getPostComments } from '../../api/comments';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ id, body }) => {\n  const [comments, setComments] = useState([]);\n  const [showComments, setShowComments] = useState(true);\n\n  useEffect(() => {\n    getPostComments(id)\n      .then(setComments);\n  }, [id]);\n\n  const handleShowComments = () => {\n    setShowComments(!showComments);\n  };\n\n  const handleCommentAdd = (postId, userName, userEmail, content) => {\n    addComment(postId, userName, userEmail, content)\n      .then(() => {\n        getPostComments(id)\n          .then(setComments);\n      });\n  };\n\n  const handleCommentDelete = (commentId) => {\n    deleteComment(commentId)\n      .then(() => {\n        getPostComments(id)\n          .then(setComments);\n      });\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{body}</p>\n      </section>\n\n      {comments.length > 0 && (\n        <section className=\"PostDetails__comments\">\n          {showComments && (\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={handleShowComments}\n            >\n              {\n                `Show\n                ${comments.length}\n                comments`\n              }\n            </button>\n          )}\n\n          {!showComments && (\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={handleShowComments}\n            >\n              {\n                `Hide\n                ${comments.length}\n                comments`\n              }\n            </button>\n          )}\n          {!showComments && (\n            <ul className=\"PostDetails__list\">\n              {comments.map(comment => (\n                <li className=\"PostDetails__list-item\" key={comment.body}>\n                  <button\n                    type=\"button\"\n                    className=\"PostDetails__remove-button button\"\n                    onClick={() => {\n                      handleCommentDelete(comment.id);\n                    }}\n                  >\n                    X\n                  </button>\n                  <p>{comment.body}</p>\n                  <p>{comment.id}</p>\n                </li>\n              ))}\n            </ul>\n          )}\n        </section>\n      )}\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm id={id} onAddComment={handleCommentAdd} />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  id: PropTypes.number.isRequired,\n  body: PropTypes.string.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { getPostDetails, getUserPosts } from './api/posts';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n  const [selectedPost, setSelectedPost] = useState(null);\n\n  useEffect(() => {\n    getUserPosts(selectedUser)\n      .then(setPosts);\n  }, [selectedUser]);\n\n  const getUserId = (event) => {\n    const { value } = event.target;\n\n    setSelectedUser(+value);\n  };\n\n  const postClose = () => {\n    setSelectedPostId(null);\n    setSelectedPost(null);\n  };\n\n  const postSelection = (postId) => {\n    setSelectedPostId(postId);\n\n    getPostDetails(postId)\n      .then(setSelectedPost);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select className=\"App__user-selector\" onChange={getUserId}>\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            selectedPostId={selectedPostId}\n            postClose={postClose}\n            postSelection={postSelection}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedPost && (\n            <PostDetails\n              {...selectedPost}\n            />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}